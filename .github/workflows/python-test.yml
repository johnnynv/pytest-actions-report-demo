name: Python CI

on: [push, pull_request]

permissions:
  checks: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-html pytest-cov

    - name: Run tests
      id: run-tests
      run: |
        cd tests
        PYTHONPATH=../src pytest \
          --cov=../src \
          --cov-report=xml:../coverage-${{ matrix.python-version }}.xml \
          --junitxml=../test-results-${{ matrix.python-version }}.xml \
          --html=../report-${{ matrix.python-version }}.html \
          --self-contained-html
        
        passed=$(grep -oP '(?<=<td>passed</td><td>)\d+' ../report-${{ matrix.python-version }}.html || echo "0")
        failed=$(grep -oP '(?<=<td>failed</td><td>)\d+' ../report-${{ matrix.python-version }}.html || echo "0")
        
        echo "PASSED=$passed" >> $GITHUB_OUTPUT
        echo "FAILED=$failed" >> $GITHUB_OUTPUT
        echo "PYVER=${matrix.python-version}" >> $GITHUB_OUTPUT

    - name: Save results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: |
          report-${{ matrix.python-version }}.html
          coverage-${{ matrix.python-version }}.xml
          test-results-${{ matrix.python-version }}.xml

    - name: Set env vars
      run: |
        echo "PY${matrix.python-version | replace('.', '_')}_PASSED=${{ steps.run-tests.outputs.PASSED }}" >> $GITHUB_ENV
        echo "PY${matrix.python-version | replace('.', '_')}_FAILED=${{ steps.run-tests.outputs.FAILED }}" >> $GITHUB_ENV

  summary:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Generate summary
        run: |
          echo "### ðŸ§ª Combined Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Python Version | Passed | Failed |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 3.8 | ${PY3_8_PASSED} | ${PY3_8_FAILED} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.9 | ${PY3_9_PASSED} | ${PY3_9_FAILED} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.10 | ${PY3_10_PASSED} | ${PY3_10_FAILED} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.11 | ${PY3_11_PASSED} | ${PY3_11_FAILED} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“Š [Download All Reports](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY

