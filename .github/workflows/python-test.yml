name: Python CI

on: [push, pull_request]

permissions:
  checks: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-html pytest-cov

    - name: Run tests and record results
      id: run-tests
      run: |
        cd tests
        PYTHONPATH=../src pytest \
          --cov=../src \
          --cov-report=xml:../coverage-${{ matrix.python-version }}.xml \
          --junitxml=../test-results-${{ matrix.python-version }}.xml \
          --html=../report-${{ matrix.python-version }}.html \
          --self-contained-html
        
        # 更可靠的测试结果提取方式
        passed=$(grep -A1 '<td>passed</td>' ../report-${{ matrix.python-version }}.html | grep -o '[0-9]\+' || echo "0")
        failed=$(grep -A1 '<td>failed</td>' ../report-${{ matrix.python-version }}.html | grep -o '[0-9]\+' || echo "0")
        
        # 设置环境变量（使用更简单的命名）
        echo "PY${matrix.python-version | replace('.', '')}_PASSED=$passed" >> $GITHUB_ENV
        echo "PY${matrix.python-version | replace('.', '')}_FAILED=$failed" >> $GITHUB_ENV
        
        echo "Test results - Python ${{ matrix.python-version }}: Passed=$passed, Failed=$failed"
      shell: bash

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: |
          report-${{ matrix.python-version }}.html
          coverage-${{ matrix.python-version }}.xml
          test-results-${{ matrix.python-version }}.xml

  summary:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Generate final report
        run: |
          # 创建Markdown表格
          echo "### 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Python Version | Passed | Failed |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 3.8 | ${PY38_PASSED:-0} | ${PY38_FAILED:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.9 | ${PY39_PASSED:-0} | ${PY39_FAILED:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.10 | ${PY310_PASSED:-0} | ${PY310_FAILED:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.11 | ${PY311_PASSED:-0} | ${PY311_FAILED:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 [View Detailed Reports]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY
          
          # 调试信息
          echo "Debug Info:" >> $GITHUB_STEP_SUMMARY
          echo "PY38_PASSED=${PY38_PASSED:-not-set}" >> $GITHUB_STEP_SUMMARY
          echo "PY39_PASSED=${PY39_PASSED:-not-set}" >> $GITHUB_STEP_SUMMARY
        shell: bash
