name: Python CI

on: [push, pull_request]

permissions:
  checks: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-html pytest-cov

    - name: Run tests and record results
      id: run-tests
      run: |
        cd tests
        PYTHONPATH=../src pytest \
          --cov=../src \
          --cov-report=xml:../coverage-${{ matrix.python-version }}.xml \
          --junitxml=../test-results-${{ matrix.python-version }}.xml \
          --html=../report-${{ matrix.python-version }}.html \
          --self-contained-html
        
        failures=$(xmllint --xpath 'string(//testsuites/@failures)' ../test-results-${{ matrix.python-version }}.xml || echo "0")
        tests=$(xmllint --xpath 'string(//testsuites/@tests)' ../test-results-${{ matrix.python-version }}.xml || echo "0")
        errors=$(xmllint --xpath 'string(//testsuites/@errors)' ../test-results-${{ matrix.python-version }}.xml || echo "0")
        skipped=$(xmllint --xpath 'string(//testsuites/@skipped)' ../test-results-${{ matrix.python-version }}.xml || echo "0")
        passed=$((tests - failures - errors - skipped))

        PY_VER=$(echo "${{ matrix.python-version }}" | tr -d '.')
        echo "PY${PY_VER}_PASSED=$passed" >> $GITHUB_ENV
        echo "PY${PY_VER}_FAILED=$failures" >> $GITHUB_ENV
        echo "PY${PY_VER}_SKIPPED=$skipped" >> $GITHUB_ENV
        echo "PY${PY_VER}_ERRORS=$errors" >> $GITHUB_ENV

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: |
          report-${{ matrix.python-version }}.html
          coverage-${{ matrix.python-version }}.xml
          test-results-${{ matrix.python-version }}.xml

  summary:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Generate final report
        run: |
          echo "### 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Python Version | ✅ Passed | ❌ Failed | ⏩ Skipped | 💥 Errors |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|----------|----------|-----------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| 3.8 | ${PY38_PASSED:-0} | ${PY38_FAILED:-0} | ${PY38_SKIPPED:-0} | ${PY38_ERRORS:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.9 | ${PY39_PASSED:-0} | ${PY39_FAILED:-0} | ${PY39_SKIPPED:-0} | ${PY39_ERRORS:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.10 | ${PY310_PASSED:-0} | ${PY310_FAILED:-0} | ${PY310_SKIPPED:-0} | ${PY310_ERRORS:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.11 | ${PY311_PASSED:-0} | ${PY311_FAILED:-0} | ${PY311_SKIPPED:-0} | ${PY311_ERRORS:-0} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 [View Detailed Reports]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY
